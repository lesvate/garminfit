////////////////////////////////////////////////////////////////////////////////
// The following FIT Protocol software provided may be used with FIT protocol
// devices only and remains the copyrighted property of Dynastream Innovations Inc.
// The software is being provided on an "as-is" basis and as an accommodation,
// and therefore all warranties, representations, or guarantees of any kind
// (whether express, implied or statutory) including, without limitation,
// warranties of merchantability, non-infringement, or fitness for a particular
// purpose, are specifically disclaimed.
//
// Copyright 2017 Dynastream Innovations Inc.
////////////////////////////////////////////////////////////////////////////////
// ****WARNING****  This file is auto-generated!  Do NOT edit this file.
// Profile Version = 20.46Release
// Tag = production/akw/20.46.00-0-g42b354e
////////////////////////////////////////////////////////////////////////////////


package com.garmin.fit.plugins.examples;

import com.garmin.fit.*;
import com.garmin.fit.plugins.*;
import com.garmin.fit.csv.MesgCSVWriter;

import java.io.FileInputStream;
import java.io.InputStream;

/**
 * Example demonstrating usage of BufferedMesgBroadcaster and
 * HrToRecordMesgBroadcaster plugin.
 * <p>
 * The example outputs all
 * record message and HR messages to a CSV file with the record
 * messages to match the HR data if their times align
 *
 */
public class HrToRecordReaderExample implements RecordMesgListener, HrMesgListener,SessionMesgListener ,DeviceInfoMesgListener{
   private MesgCSVWriter mesgWriter;

   public static void main(String[] args) {
      System.out.printf("FIT Hr Record Reader Example Application - Protocol %d.%d Profile %.2f %s\n", Fit.PROTOCOL_VERSION_MAJOR, Fit.PROTOCOL_VERSION_MINOR, Fit.PROFILE_VERSION / 100.0, Fit.PROFILE_TYPE);
      long s1 = System.currentTimeMillis();
      FileInputStream in;

      HrToRecordReaderExample example = new HrToRecordReaderExample();
      Decode decode = new Decode();
      BufferedMesgBroadcaster mesgBroadcaster = new BufferedMesgBroadcaster(decode);

      String file = "c:\\Workouts_17802_2017-10-18-19-8-14.fit";

      try {
         in = new FileInputStream(file);
      }
      catch (java.io.IOException e) {
         throw new RuntimeException("Error opening file " + file);
      }

      try {
         if (!decode.checkFileIntegrity((InputStream) in))
            throw new RuntimeException("FIT file integrity failed.");
      }  catch (RuntimeException e) {
         System.err.print("Exception Checking File Integrity: ");
         System.err.println(e.getMessage());
      }
      finally {
         try {
            in.close();
         }
         catch (java.io.IOException e) {
            throw new RuntimeException(e);
         }
      }
      try {
         in = new FileInputStream(file);
      } catch (java.io.IOException e) {
         throw new RuntimeException("Error opening file " + file + " [2]");
      }

      String outputFile = file + "-HrRecordExampleProcessed.csv";
      mesgBroadcaster.addListener((RecordMesgListener) example);
      mesgBroadcaster.addListener((SessionMesgListener) example);
      mesgBroadcaster.addListener((DeviceInfoMesgListener) example);

      try {
         example.mesgWriter = new MesgCSVWriter(outputFile);

         // Create plugin and register with mesgBroadcaster
         MesgBroadcastPlugin plugin = new HrToRecordMesgBroadcastPlugin();
         mesgBroadcaster.registerMesgBroadcastPlugin(plugin);

         mesgBroadcaster.run(in);      // Run decoder
         mesgBroadcaster.broadcast();  // End of file so flush pending data.
         example.mesgWriter.close();
      }
      catch (FitRuntimeException e) {
         System.err.print("Exception decoding file: ");
         System.err.println(e.getMessage());
      }

      System.out.println("Decoded Record and Hr data from " + file + " to " + outputFile);
      long s2 = System.currentTimeMillis();
      System.out.println(s2-s1);
   }

   public void onMesg(RecordMesg mesg) {
      mesgWriter.onMesg(mesg);
   }

   public void onMesg(HrMesg mesg) {
      mesgWriter.onMesg(mesg);
   }

@Override
public void onMesg(SessionMesg mesg) {
	mesgWriter.onMesg(mesg);
	
}

@Override
public void onMesg(DeviceInfoMesg mesg) {
	mesgWriter.onMesg(mesg);
	
}
}
